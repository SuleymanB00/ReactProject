{"ast":null,"code":"var _jsxFileName = \"/Users/sulejmanbajramov/Desktop/react-course-app/src/components/Costs/CostsDiagram.js\";\nimport Diagram from \"../Diagram/Diagram\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CostsDiagram = props => {\n  const diagramDataSets = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const cost in props.costs) {\n    const costMonth = cost.date.getMonth();\n    diagramDataSets[costMonth].value += cost.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Diagram, {\n    dataSets: diagramDataSets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 8\n  }, this);\n};\n_c = CostsDiagram;\nexport default CostsDiagram;\nvar _c;\n$RefreshReg$(_c, \"CostsDiagram\");","map":{"version":3,"names":["Diagram","jsxDEV","_jsxDEV","CostsDiagram","props","diagramDataSets","label","value","cost","costs","costMonth","date","getMonth","amount","dataSets","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sulejmanbajramov/Desktop/react-course-app/src/components/Costs/CostsDiagram.js"],"sourcesContent":["import Diagram from \"../Diagram/Diagram\";\n\nconst CostsDiagram =(props)=>{\n    const diagramDataSets=[\n        {label:'Jan',value :0},\n        {label:'Feb',value :0},\n        {label:'Mar',value :0},\n        {label:'Apr',value :0},\n        {label:'May',value :0},\n        {label:'Jun',value :0},\n        {label:'Jul',value :0},\n        {label:'Aug',value :0},\n        {label:'Sep',value :0},\n        {label:'Oct',value :0},\n        {label:'Nov',value :0},\n        {label:'Dec',value :0}\n\n    ];\nfor (const cost in props.costs){\n    const costMonth = cost.date.getMonth();\n    diagramDataSets[costMonth].value +=cost.amount;\n}\n\nreturn <Diagram dataSets={diagramDataSets} />\n};\nexport default CostsDiagram;"],"mappings":";AAAA,OAAOA,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGC,KAAK,IAAG;EACzB,MAAMC,eAAe,GAAC,CAClB;IAACC,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAE;EAAC,CAAC,CAEzB;EACL,KAAK,MAAMC,IAAI,IAAIJ,KAAK,CAACK,KAAK,EAAC;IAC3B,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;IACtCP,eAAe,CAACK,SAAS,CAAC,CAACH,KAAK,IAAGC,IAAI,CAACK,MAAM;EAClD;EAEA,oBAAOX,OAAA,CAACF,OAAO;IAACc,QAAQ,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7C,CAAC;AAACC,EAAA,GAtBIhB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}